// eslint.config.javascript.mjs
import js from '@eslint/js';
import globals from 'globals';

export default {
    files: ['**/*.{js,jsx,mjs}'],
    ignores: ['dist/**', 'node_modules/**', 'build/**', 'public/**', 'coverage/**', 'stats.html'],
    languageOptions: {
        ecmaVersion: 'latest',
        globals: {
            ...globals.browser,
            ...globals.es2021,
        },
        parserOptions: {
            ecmaFeatures: {
                jsx: true,
            },
        },
        sourceType: 'module',
    },
    linterOptions: {
        reportUnusedDisableDirectives: 'error',
    },
    name: 'Site8-javascript',
    plugins: {
        '@eslint/js': js,
    },
    rules: {
        ...js.configs.recommended.rules,
        // ============================================================================
        // JavaScript Core Rules
        // ============================================================================
        'accessor-pairs': 'error',
        'array-callback-return': 'error',
        'block-scoped-var': 'error',
        'class-methods-use-this': 'error',
        complexity: ['warn', 20],
        'consistent-return': 'error',
        'consistent-this': 'error',
        'default-case': 'error',
        'default-case-last': 'error',
        'default-param-last': 'error',
        'dot-notation': 'error',
        eqeqeq: ['error', 'always', { null: 'ignore' }],
        'func-name-matching': 'error',
        'func-names': ['error', 'as-needed'],
        'func-style': ['error', 'expression'],
        'grouped-accessor-pairs': 'error',
        'guard-for-in': 'error',
        'id-denylist': 'error',
        'id-match': 'error',
        'logical-assignment-operators': ['error', 'always'],
        'max-classes-per-file': ['error', 1],
        'max-depth': ['error', 4],
        'max-lines': ['warn', { max: 500, skipBlankLines: true, skipComments: true }],
        'max-nested-callbacks': ['error', 3],
        'new-cap': ['error', { capIsNew: false }],
        'no-alert': 'error',
        'no-array-constructor': 'error',
        'no-await-in-loop': 'error',
        'no-bitwise': 'error',
        'no-caller': 'error',
        'no-console': ['warn', { allow: ['warn', 'error', 'info'] }],
        'no-constructor-return': 'error',
        'no-continue': 'error',
        'no-div-regex': 'error',
        'no-duplicate-imports': 'error',
        'no-else-return': ['error', { allowElseIf: false }],
        'no-empty-function': 'error',
        'no-eq-null': 'off',
        'no-eval': 'error',
        'no-extend-native': 'error',
        'no-extra-bind': 'error',
        'no-extra-label': 'error',
        'no-implicit-coercion': ['error', { allow: ['!!'] }],
        'no-implicit-globals': 'error',
        'no-implied-eval': 'error',
        'no-inner-declarations': 'error',
        'no-invalid-this': 'error',
        'no-iterator': 'error',
        'no-label-var': 'error',
        'no-labels': 'error',
        'no-lone-blocks': 'error',
        'no-lonely-if': 'error',
        'no-loop-func': 'error',
        'no-multi-assign': 'error',
        'no-multi-str': 'error',
        'no-negated-condition': 'error',
        'no-nested-ternary': 'error',
        'no-new-func': 'error',
        'no-new-wrappers': 'error',
        'no-object-constructor': 'error',
        'no-octal-escape': 'error',
        'no-param-reassign': ['error', { props: true }],
        'no-promise-executor-return': 'error',
        'no-proto': 'error',
        'no-restricted-exports': 'error',
        'no-restricted-globals': ['error', 'event', 'fdescribe'],
        'no-restricted-imports': [
            'error',
            {
                paths: [
                    {
                        importNames: ['useLocation', 'useHistory', 'useParams', 'useRouteMatch', 'Link'],
                        message: 'Import from react-router-dom instead of react-router.',
                        name: 'react-router',
                    },
                ],
            },
        ],
        'no-restricted-properties': [
            'warn',
            {
                message: 'Use toReversed() instead of reverse() to avoid mutation.',
                property: 'reverse',
            },
            {
                message: 'Use toSorted() instead of sort() to avoid mutation.',
                property: 'sort',
            },
            {
                message: 'Use toSpliced() instead of splice() to avoid mutation.',
                property: 'splice',
            },
        ],
        'no-restricted-syntax': [
            'error',
            {
                message: 'for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.',
                selector: 'ForInStatement',
            },
            {
                message: 'Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.',
                selector: 'LabeledStatement',
            },
            {
                message: '`with` is disallowed in strict mode because it makes code impossible to predict and optimize.',
                selector: 'WithStatement',
            },
        ],
        'no-return-assign': ['error', 'always'],
        'no-script-url': 'error',
        'no-self-compare': 'error',
        'no-sequences': 'error',
        'no-shadow': 'error',
        'no-template-curly-in-string': 'error',
        'no-throw-literal': 'error',
        'no-undef': 'off',
        'no-undef-init': 'error',
        'no-underscore-dangle': ['error', { allow: ['_id', '_rev'], allowAfterThis: true }],
        'no-unmodified-loop-condition': 'error',
        'no-unneeded-ternary': 'error',
        'no-unreachable-loop': 'error',
        'no-unused-expressions': 'error',
        'no-unused-vars': ['warn', { argsIgnorePattern: '^_', varsIgnorePattern: '^_' }],
        'no-useless-assignment': 'error',
        'no-useless-call': 'error',
        'no-useless-computed-key': 'error',
        'no-useless-concat': 'error',
        'no-useless-constructor': 'error',
        'no-useless-rename': 'error',
        'no-useless-return': 'error',
        'no-var': 'error',
        'no-void': 'error',
        'no-warning-comments': ['warn', { terms: ['todo', 'fixme', 'hack', 'xxx'], location: 'start' }],
        'object-shorthand': ['error', 'always'],
        'operator-assignment': ['error', 'always'],
        'prefer-arrow-callback': ['error', { allowNamedFunctions: false }],
        'prefer-const': ['error', { destructuring: 'all' }],
        'prefer-destructuring': ['error', { array: false, object: true }],
        'prefer-exponentiation-operator': 'error',
        'prefer-named-capture-group': 'error',
        'prefer-numeric-literals': 'error',
        'prefer-object-has-own': 'error',
        'prefer-object-spread': 'error',
        'prefer-promise-reject-errors': 'error',
        'prefer-regex-literals': 'error',
        'prefer-rest-params': 'error',
        'prefer-spread': 'error',
        'prefer-template': 'error',
        radix: 'error',
        'require-atomic-updates': 'error',
        'require-await': 'error',
        'require-unicode-regexp': 'error',
        strict: ['error', 'never'],
        'symbol-description': 'error',
        'unicode-bom': ['error', 'never'],
        'vars-on-top': 'error',
        yoda: 'error',

        // ============================================================================
        // Deprecated Rules - Turned Off - defer to prettier for code formatting
        // ============================================================================
        'array-bracket-newline': 'off',
        'array-bracket-spacing': 'off',
        'array-element-newline': 'off',
        'arrow-body-style': 'off',
        'arrow-parens': 'off',
        'arrow-spacing': 'off',
        'block-spacing': 'off',
        'brace-style': 'off',
        'comma-dangle': 'off',
        'comma-spacing': 'off',
        'comma-style': 'off',
        'computed-property-spacing': 'off',
        'dot-location': 'off',
        'eol-last': 'off',
        'func-call-spacing': 'off',
        'function-call-argument-newline': 'off',
        'function-paren-newline': 'off',
        'generator-star-spacing': 'off',
        'implicit-arrow-linebreak': 'off',
        indent: 'off',
        'jsx-quotes': 'off',
        'key-spacing': 'off',
        'keyword-spacing': 'off',
        'linebreak-style': 'off',
        'lines-around-comment': 'off',
        'max-len': 'off',
        'max-lines-per-line': 'off',
        'multiline-ternary': 'off',
        'new-parens': 'off',
        'newline-per-chained-call': 'off',
        'no-confusing-arrow': 'off',
        'no-extra-parens': 'off',
        'no-extra-semi': 'off',
        'no-floating-decimal': 'off',
        'no-inline-comments': 'off',
        'no-mixed-operators': 'off',
        'no-mixed-spaces-and-tabs': 'off',
        'no-multi-spaces': 'off',
        'no-multiple-empty-lines': 'off',
        'no-plusplus': 'off',
        'no-tabs': 'off',
        'no-trailing-spaces': 'off',
        'no-undefined': 'off',
        'no-whitespace-before-property': 'off',
        'nonblock-statement-body-position': 'off',
        'object-curly-newline': 'off',
        'object-curly-spacing': 'off',
        'object-property-newline': 'off',
        'one-var': 'off',
        'one-var-declaration-per-line': 'off',
        'operator-linebreak': 'off',
        'padded-blocks': 'off',
        'quote-props': 'off',
        quotes: 'off',
        'rest-spread-spacing': 'off',
        semi: 'off',
        'semi-spacing': 'off',
        'semi-style': 'off',
        'space-before-blocks': 'off',
        'space-before-function-paren': 'off',
        'space-in-parens': 'off',
        'space-infix-ops': 'off',
        'space-unary-ops': 'off',
        'switch-colon-spacing': 'off',
        'template-curly-spacing': 'off',
        'template-tag-spacing': 'off',
        'wrap-iife': 'off',
        'wrap-regex': 'off',
        'yield-star-spacing': 'off',
    },
};