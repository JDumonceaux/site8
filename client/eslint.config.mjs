// @ts-check
import js from '@eslint/js';
import tseslint from '@typescript-eslint/eslint-plugin';
import pluginImport from 'eslint-plugin-import';
import a11y from 'eslint-plugin-jsx-a11y';
import reactHooks from 'eslint-plugin-react-hooks';

export default [
  {
    name: 'Site8- eslint',
    files: ['**/*.{js,jsx,ts,tsx,mjs}'],
    ignores: ['dist/**', 'node_modules/**', 'bin/**'],
    languageOptions: {
      // default
      ecmaVersion: 'latest',
      // default
      sourceType: 'module',
      parser: 'eslintParse',
      // globals:
      // parserOptions:
    },
    linterOptions: {
      reportUnusedDisableDirectives: 'error',
    },
    plugins: {
      a11y,
      reactHooks,
    },
    rules: {
      ...js.configs.recommended.rules,
      ...a11y.configs.recommended.rules,
      ...reactHooks.configs.recommended.rules,
      // 'eslint/accessor-pairs': 'error',
      // 'eslint/array-callback-return': 'error',
      // 'eslint/arrow-body-style': 'error',
      // 'eslint/block-scoped-var': 'error',
      // 'eslint/camelcase': 'error',
      // 'eslint/capitalized-comments': 'error',
      // 'eslint/class-methods-use-this': 'error',
      // 'eslint/complexity': 'error',
      // 'eslint/consistent-return': 'error',
      // 'eslint/consistent-this': 'error',
      // 'eslint/curly': 'error',
      // 'eslint/default-case': 'error',
      // 'eslint/default-case-last': 'error',
      // 'eslint/default-param-last': 'error',
      // 'eslint/dot-notation': 'error',
      // 'eslint/eqeqeq': 'error',
      // 'eslint/func-name-matching': 'error',
      // 'eslint/func-names': 'error',
      // 'eslint/func-style': 'error',
      // 'eslint/grouped-accessor-pairs': 'error',
      // 'eslint/guard-for-in': 'error',
      // 'eslint/id-denylist': 'error',
      // 'eslint/id-length': 'error',
      // 'eslint/id-match': 'error',
      // 'eslint/init-declarations': 'error',
      // 'eslint/logical-assignment-operators': 'error',
      // 'eslint/max-classes-per-file': 'error',
      // 'eslint/max-depth': 'error',
      // 'eslint/max-lines': ['error', 300],
      // 'eslint/max-lines-per-function': 'error',
      // 'eslint/max-nested-callbacks': 'error',
      // 'eslint/max-params': 'error',
      // 'eslint/max-statements': 'error',
      // 'eslint/new-cap': 'error',
      // 'eslint/no-alert': 'error',
      // 'eslint/no-array-constructor': 'error',
      // 'eslint/no-await-in-loop': 'error',
      // 'eslint/no-bitwise': 'error',
      // 'eslint/no-caller': 'error',
      // 'eslint/no-console': 'error',
      // 'eslint/no-constructor-return': 'error',
      // 'eslint/no-continue': 'error',
      // 'eslint/no-div-regex': 'error',
      // 'eslint/no-duplicate-imports': 'error',
      // 'eslint/no-else-return': 'error',
      // 'eslint/no-empty-function': 'error',
      // 'eslint/no-eq-null': 'error',
      // 'eslint/no-eval': 'error',
      // 'eslint/no-extend-native': 'error',
      // 'eslint/no-extra-bind': 'error',
      // 'eslint/no-extra-label': 'error',
      // 'eslint/no-implicit-coercion': 'error',
      // 'eslint/no-implicit-globals': 'error',
      // 'eslint/no-implied-eval': 'error',
      // 'eslint/no-inline-comments': 'error',
      // 'eslint/no-inner-declarations': 'error',
      // 'eslint/no-invalid-this': 'error',
      // 'eslint/no-iterator': 'error',
      // 'eslint/no-labels': 'error',
      // 'eslint/no-label-var': 'error',
      // 'eslint/no-lone-blocks': 'error',
      // 'eslint/no-lonely-if': 'error',
      // 'eslint/no-loop-func': 'error',
      // 'eslint/no-magic-numbers': 'error',
      // 'eslint/no-multi-assign': 'error',
      // 'eslint/no-multi-str': 'error',
      // 'eslint/no-negated-condition': 'error',
      // 'eslint/no-nested-ternary': 'error',
      // 'eslint/no-new': 'error',
      // 'eslint/no-new-func': 'error',
      // 'eslint/no-new-wrappers': 'error',
      // 'eslint/no-nonoctal-decimal-escape': 'error',
      // 'eslint/no-object-constructor': 'error',
      // 'eslint/no-octal-escape': 'error',
      // 'eslint/no-param-reassign': 'error',
      // 'eslint/no-plusplus': 'error',
      // 'eslint/no-promise-executor-return': 'error',
      // 'eslint/no-proto': 'error',
      // 'eslint/no-restricted-exports': 'error',
      // 'eslint/no-restricted-globals': 'error',
      // 'eslint/no-restricted-imports': 'error',
      // 'eslint/no-restricted-properties': 'error',
      // 'eslint/no-restricted-syntax': 'error',
      // 'eslint/no-return-assign': 'error',
      // 'eslint/no-script-url': 'error',
      // 'eslint/no-self-compare': 'error',
      // 'eslint/no-sequences': 'error',
      // 'eslint/no-shadow': 'error',
      // 'eslint/no-template-curly-in-string': 'error',
      // 'eslint/no-ternary': 'error',
      // 'eslint/no-throw-literal': 'error',
      // 'eslint/no-undefined': 'error',
      // 'eslint/no-undef-init': 'error',
      // 'eslint/no-underscore-dangle': 'error',
      // 'eslint/no-unmodified-loop-condition': 'error',
      // 'eslint/no-unneeded-ternary': 'error',
      // 'eslint/no-unreachable-loop': 'error',
      // 'eslint/no-unused-expressions': 'error',
      // 'eslint/no-use-before-define': 'error',
      // 'eslint/no-useless-assignment': 'error',
      // 'eslint/no-useless-call': 'error',
      // 'eslint/no-useless-catch': 'error',
      // 'eslint/no-useless-computed-key': 'error',
      // 'eslint/no-useless-concat': 'error',
      // 'eslint/no-useless-constructor': 'error',
      // 'eslint/no-useless-rename': 'error',
      // 'eslint/no-useless-return': 'error',
      // 'eslint/no-var': 'error',
      // 'eslint/no-void': 'error',
      // 'eslint/no-warning-comments': 'error',
      // 'eslint/object-shorthand': 'error',
      // 'eslint/one-var': 'error',
      // 'eslint/operator-assignment': 'error',
      // 'eslint/prefer-arrow-callback': 'error',
      // 'eslint/prefer-const': 'error',
      // 'eslint/prefer-destructuring': 'error',
      // 'eslint/prefer-exponentiation-operator': 'error',
      // 'eslint/prefer-named-capture-group': 'error',
      // 'eslint/prefer-numeric-literals': 'error',
      // 'eslint/prefer-object-has-own': 'error',
      // 'eslint/prefer-object-spread': 'error',
      // 'eslint/prefer-promise-reject-errors': 'error',
      // 'eslint/prefer-regex-literals': 'error',
      // 'eslint/prefer-rest-params': 'error',
      // 'eslint/prefer-spread': 'error',
      // 'eslint/prefer-template': 'error',
      // 'eslint/radix': 'error',
      // 'eslint/require-atomic-updates': 'error',
      // 'eslint/require-await': 'error',
      // 'eslint/require-unicode-regexp': 'error',
      // 'eslint/sort-imports': 'error',
      // 'eslint/sort-keys': 'error',
      // 'eslint/sort-vars': 'error',
      // 'eslint/strict': 'error',
      // 'eslint/symbol-description': 'error',
      // 'eslint/unicode-bom': 'error',
      // 'eslint/vars-on-top': 'error',
      // 'eslint/yoda': 'error',
    },
  },

  {
    files: ['**/*.{ts,tsx}'],
    languageOptions: {
      parser: '@typescript-eslint/parser',
    },
    plugins: {
      pluginImport,
    },

    rules: {
      //
      ...tseslint.configs.recommended,
      ...pluginImport.configs.recommended,
      // ...tseslint.configs.strict,
      // ...tseslint.configs.stylistic,

      // React Rules
      // ...react.configs.recommended.rules,
      // 'react/boolean-prop-naming': 'error',
      // 'react/button-has-type': 'error',
      // 'react/checked-requires-onchange-or-readonly': 'error',
      // 'react/default-props-match-prop-types': 'error',
      // 'react/destructuring-assignment': 'error',
      // 'react/forbid-component-props': 'error',
      // 'react/forbid-dom-props': 'error',
      'react/forbid-elements': [
        'error',
        {
          forbid: [
            { element: 'applet', message: 'use <object> instead' },
            { element: ' acronym', message: 'use <abbr> instead' },
            { element: 'basefont', message: 'use <font> instead' },
            { element: 'bgsound' },
            { element: 'big', message: 'use font-size instead' },
            { element: 'blink', message: 'use css instead' },
            { element: 'center', message: 'use text-align instead' },
            { element: 'dir' },
            { element: 'embed', message: 'use <object> instead' },
            {
              element: 'font',
              message: 'use font-family and font-size instead',
            },
            { element: 'frameset', message: 'use <iframe> instead' },
            { element: 'isindex' },
            { element: 'ilayer' },
            { element: 'keygen' },
            { element: 'frameset', message: 'use <iframe> instead' },
            { element: 'layer' },
            { element: 'menu' },
            { element: 'menuitem' },
            { element: 'menu' },
            { element: 'multicol' },
            { element: 'nobr' },
            { element: 'noembed' },
            { element: 'noframes' },
            { element: 'frameset' },
            { element: 'plaintext', message: 'use <pre> instead' },
            { element: 'frameset', message: 'use <iframe> instead' },
            { element: 'param' },
            { element: 's', message: 'use text-decoration instead' },
            { element: 'strike', message: 'use text-decoration instead' },
            { element: 'spacer', message: 'use <pre> & <br> instead' },
            { element: 'tt', message: 'use <pre> & <kbd> instead' },
            { element: 'u', message: 'use <pre> & <kbd> instead' },
            { element: 'xmp', message: 'use text-decoration instead' },
            { element: 'frame' },
            { element: 'marquee', message: 'use CDD instead' },
          ],
        },
      ],
      // 'react/forbid-foreign-prop-types': 'error',
      // 'react/forbid-prop-types': 'error',
      // 'react/function-component-definition': 'error',
      // 'react/hook-use-state': 'error',
      // 'react/iframe-missing-sandbox': 'error',
      // 'react/jsx-boolean-value': 'error',
      // 'react/jsx-child-element-spacing': 'error',
      // 'react/jsx-closing-bracket-location': 'error',
      // 'react/jsx-closing-tag-location': 'error',
      // 'react/jsx-curly-brace-presence': 'error',
      // 'react/jsx-curly-newline': 'error',
      // 'react/jsx-curly-spacing': 'error',
      // 'react/jsx-equals-spacing': 'error',
      // 'react/jsx-filename-extension': 'error',
      // 'react/jsx-first-prop-new-line': 'error',
      // 'react/jsx-fragments': 'error',
      // 'react/jsx-handler-names': 'error',
      // 'react/jsx-indent': 'error',
      // 'react/jsx-indent-props': 'error',
      // 'react/jsx-max-depth': 'error',
      // 'react/jsx-max-props-per-line': 'error',
      // 'react/jsx-newline': 'error',
      // 'react/jsx-no-bind': 'error',
      // 'react/jsx-no-constructed-context-values': 'error',
      // 'react/jsx-no-leaked-render': 'error',
      // 'react/jsx-no-literals': 'error',
      // 'react/jsx-no-script-url': 'error',
      // 'react/jsx-no-useless-fragment': 'error',
      // 'react/jsx-one-expression-per-line': 'error',
      // 'react/jsx-pascal-case': 'error',
      // 'react/jsx-props-no-multi-spaces': 'error',
      // 'react/jsx-props-no-spread-multi': 'error',
      // 'react/jsx-props-no-spreading': 'error',
      // 'react/jsx-sort-default-props': 'error',
      // 'react/jsx-sort-props': 'error',
      // 'react/jsx-space-before-closing': 'error',
      // 'react/jsx-tag-spacing': 'error',
      // 'react/jsx-wrap-multilines': 'error',
      // 'react/no-access-state-in-setstate': 'error',
      // 'react/no-adjacent-inline-elements': 'error',
      // 'react/no-array-index-key': 'error',
      // 'react/no-arrow-function-lifecycle': 'error',
      // 'react/no-danger': 'error',
      // 'react/no-did-mount-set-state': 'error',
      // 'react/no-did-update-set-state': 'error',
      // 'react/no-invalid-html-attribute': 'error',
      // 'react/no-multi-comp': 'error',
      // 'react/no-namespace': 'error',
      // 'react/no-object-type-as-default-prop': 'error',
      // 'react/no-redundant-should-component-update': 'error',
      // 'react/no-set-state': 'error',
      // 'react/no-this-in-sfc': 'error',
      // 'react/no-typos': 'error',
      // 'react/no-unstable-nested-components': 'error',
      // 'react/no-unused-class-component-methods': 'error',
      // 'react/no-unused-prop-types': 'error',
      // 'react/no-unused-state': 'error',
      // 'react/no-will-update-set-state': 'error',
      // 'react/prefer-es6-class': 'error',
      // 'react/prefer-exact-props': 'error',
      // 'react/prefer-read-only-props': 'error',
      // 'react/prefer-stateless-function': 'error',
      // 'react/require-default-props': 'error',
      // 'react/require-optimization': 'error',
      // 'react/self-closing-comp': 'error',
      // 'react/sort-comp': 'error',
      // 'react/sort-default-props': 'error',
      // 'react/sort-prop-types': 'error',
      // 'react/state-in-constructor': 'error',
      // 'react/static-property-placement': 'error',
      // 'react/style-prop-object': 'error',
      // 'react/void-dom-elements-no-children': 'error',
      // Hook rules
      ...reactHooks.configs.recommended.rules,
      // A11y rules
      ...a11y.configs.recommended.rules,
    },
  },
  {
    files: ['**/*.test.js', '**/*.spec.js'],
    languageOptions: {
      globals: {
        it: 'readonly',
        expect: 'readonly',
        describe: 'readonly',
      },
    },
  },
];
