{
  "compilerOptions": {
    // https://www.typescriptlang.org/tsconfig/
    "target": "ESNext",
    "useDefineForClassFields": true,
    "lib": ["DOM", "DOM.Iterable", "ESNext", "ESNext.Array"],

    /* Module */
    // Sets the module system for the program (i.e. ES2023)
    "module": "ESNext",

    /* Module Resolution */
    // Set module resultion strategy
    "moduleResolution": "Node",

    /* Module Suffixes */
    // Override file names for module resolution
    // "moduleSuffixes": ["js", "jsx", "ts", "tsx"],

    /* No resolve */
    // Do not add import and references directives to the program
    // "noResolve": false,

    /* Paths */
    "paths": {
      "@/*": ["src/*"]
    },

    /* Type Checking */
    // Warns is unreachable code is detected
    "allowUnreachableCode": false,
    // Warns if a label is declared but not used.  Probably a coding error.
    "allowUnusedLabels": false,
    // Improves performance. Files are parsed in the ECMAScript strict mode.
    "alwaysStrict": true,
    // Prevents 'undefined' from being assigned to optional variables
    "exactOptionalPropertyTypes": true,
    // Prevents unintended fallthroughs in switch statements.
    // Must break, return, or throw at the end of each case
    "noFallthroughCasesInSwitch": true,
    // Prevents defaulting to 'any' when a type is not specified
    "noImplicitAny": true,
    // Warns if inherited class methods do not override parent methods
    "noImplicitOverride": true,
    // Warns if a function doesn't have a return
    "noImplicitReturns": true,
    // Warns if 'this' is any
    "noImplicitThis": true,
    // Prevents access to fields that are not defined
    "noPropertyAccessFromIndexSignature": true,
    // Adds 'undefined' to the type of undefined variables
    "noUncheckedIndexedAccess": true,
    // Warns about unusued local variables
    "noUnusedLocals": true,
    // Warns about unused parameters
    "noUnusedParameters": true,
    // Shorthand for a set of "stict" rules
    "strict": true,
    //"strictBindCallApply": true,
    //"strictFunctionTypes": true,
    //"strictNullChecks": true,
    //"strictPropertyInitialization": true,
    // Changes catch (err: any) to catch (err: unknown)
    "useUnknownInCatchVariables": true,
    /* End - Type Checking */

    /* Modules */
    // Requires that imports be .js, ts, or have a declaration file
    "allowArbitraryExtensions": false,
    // Allows .ts files to be imported. Bundler must handle this.
    // "allowImportingTsExtensions": true,
    // ?
    //"allowUmdGlobalAccess": false,
    // For use with AMD loaders. Not recommended. Use paths instead.
    // "baseUrl": "src",

    /* Custom Conditions  */
    // "customConditions": ["xxx"],

    "allowJs": false,
    "skipLibCheck": true,
    // Needed to import React  without `import * as React from 'react'`
    "esModuleInterop": true,
    // Needed to import React  without `import * as React from 'react'`
    "allowSyntheticDefaultImports": true,

    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    // "declaration": true,
    "jsx": "react-jsx",
    //"typeRoots": ["./dist/index.d.ts"],

    "forceConsistentCasingInFileNames": true,

    "sourceMap": true,

    "suppressImplicitAnyIndexErrors": false
  },
  // Allow absolute imports from the `src` directory
  "include": ["src"],
  "exclude": ["node_modules", "__test__"],
  "references": [{ "path": "./tsconfig.node.json" }]
}
