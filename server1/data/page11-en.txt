The standard input field or button just doesn't cut it when it comes to style: everyone wants to tweak the style to fit their website.  You have a few of choices in your approach to styling your site:

<ol>
<li>Component Libraries: Download and use a component library (ex. Material UI/MUI or Bootstrap).   These give you a library of the top 20-30 most commonly used components to drop into your site: Buttons, inputs, accordions, tables, etc.  These are all nicely designed, consistent, and extremely well-tested.  Usually, you have some method to easily change some colors, but not much else. Unfortunately, no one is ever happy with these libraries - especially UI designers.   Inevitably, you spend a lot of effort and time overriding and creating new versions.  (I was on a project that started with Material UI.  By the end, 90% of the code was overridden.)</li>
<li>Start from scratch: You can create your own component library from basic HTML elements.   This is a lot of work - far more than you would estimate it would take.</li>
<li>Use Unstyled Component Libraries. This gives you a head-start - especially on more complex components such as accordions and date pickers - without getting into a CSS mess.  I recommend that you slowly create your own component library: don't try to create a complete library - just what you need at the moment. Then add to it as you learn your requirements.</li>  
</ol>  

<h2>Unstyled Component Libraries</h2>

<h3>Hook Based</h3>
<ul>
<li>React ARIA</li>
<li>Downshift Library</li>
<li>Base UI - from Material UI (hook and component versions)</li>
</ul>


<h3>Component Based</h3>
<ul>
<li>Radix (*)</li>
<li>React ARIA</li>
<li>Base UI - from Material UI (hook and component versions)</li>
<li>Headless UI (by Tailwind)</li>
<li>Reach UI</li>
</ul>

Radix allows you to import single elements vs. an entire component library.


<h2>Bootstrap</h2>

<ul>
<li>5.7m users</li>
<li>Mobile-first CSS framework.</li>
<li>Strong grid systеm.</li>
<li>Use React Bootstrap with React.</li>
<li>Dated?</li>
</ul>

<h2>Tailwind CSS</h2>

<ul>
<li>9.9. users</li>
<li>Utility-first CSS framework with utility classes.</li>
<li>Example classname:  className="w-full resize-none rounded border border-stroke px-[14px] py-3 text-base text-body-color outline-none focus:border-primary dark:border-dark-3 dark:bg-dark dark:text-dark-6"</li>
<li>Very popular</li>
<li>I very much feel that the long strings of utility classes are visual "noise" that block from seeing code issues.</li>
</ul>

<h2>Foundation</h2>

<ul>
<li>48k users</li>
<li>Prior upgrades have been breaking - resulting in substantial rework.</li>
</ul>

<h2>Bulma</h2>

<ul>
<li>250k users</li>
<li>built on Flеxbox</li>
<li>Dated?</li>
</ul>

<h2>UIKit</h2>

<ul>
<li>13k users</li>
<li>Component focused</li>
</ul>

<h2>Material UI - MUI</h2>

<h2>Matine</h2>

<h2>Chakra</h2>

<h2>React Select Library</h2>


<a href="https://www.youtube.com/watch?v=yn6vFCRkC3c">Kyle - Unstyled Components</a>



