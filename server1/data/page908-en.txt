A web site is a non-ending process of maintenance.  The biggest reason is to address security vulnerabilities.  Then, bugs and defects.  Lowest on the list, but equally important to keep the code current: the numerous libraries upon which applications are built continue to change.  

Here are some items to consider:
<ol>
<li>Start Over</li>
  <ol>
     <li>It is a good idea to start fresh every so often - pulling your code into a new project and getting it to run.</li>
     <li>I discovered that I was missing some files in source control because of my .gitignore settings</li>
     <li>If you change the capitalization on a directory ("Store" to "store"), React will often continue to work and not indicate any errors.  However, if you 
pull the code from source control - it won't compile and only then will it throw an error.</li>
    <li>For Node projects, the code is compiled the <em>dist</em> folder.   If you delete files, they may continue to exist (and be used) from the dist folder.  Clear out the folder occassionally.</li>

 </ol>
<li>Typescript</li>
  <ol>
     <li>Update the version:  npm install -D typescript    <a href="https://www.npmjs.com/package/typescript>NPM - Typescript</a>.</li>
     <li>Read the release notes: <a href="https://www.typescriptlang.org/">Typescript.org</a></li>
     <li>Implement or open work tickets for any deprecated features.</li>
     <li>Refactor code to take advantage of new features.</li>
  </ol>
<li>Lazy Load</li>
  <ol>
     <li>Router Provider - validate Lazy load is used where appropriate</li>
     <li>Chrome | Developer Tools | Sources tab | Page.  Review loaded code and implement Lazy load where appropriate.</li>
     <li>Chrome | Developer Tools | Sources tab | Page.  Remove excess files.</li>
  </ol>

</ol>